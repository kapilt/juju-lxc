- name: Provision Resources
  hosts: localhost
  user: ubuntu
  gather_facts: false
  vars:
    session_id: 0fdbbd86-bc20-11e3-80da-1f849140269d
    launchpad_user: hazmat
    instance_name: Juju Fast LXC
    ec2_region: us-east-1
    ec2_key: realms
    instance_type: m1.small

  tasks:
    - name: Create jlxc security group
      local_action:
        module: ec2_group
        description: juju lxc security group
        name: jlxc
        region: "{{ ec2_region }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0

    - name: Create the jlxc instance
      register: ec2
      local_action:
        module: ec2
        image: ami-d38d9aba
        group: jlxc
        id: "{{ session_id }}"
        region: "{{ ec2_region }}"
        instance_type: "{{ instance_type }}"
        keypair: "{{ ec2_key }}"
        wait: yes
        wait_timeout: 350
        user_data: |
          # cloud-config
          ssh-import-id: [{{ launchpad_user }}]
        instance_tags:
          Name: "{{ instance_name }}"
        volumes:
          - device_name: /dev/xvdc
            volume_size: 10
            delete_on_termination: true
        monitoring: yes

    - name: Add instance to ansible host group
      local_action: add_host hostname={{ item.public_ip }} groupname=launched
      with_items: ec2.instances
    - name: Wait for SSH to come up
      local_action: wait_for host={{ item.public_dns_name }} port=22 timeout=450 state=started
      with_items: ec2.instances

- name: Setup Resources
  hosts: launched
  user: ubuntu
  sudo: true
  gather_facts: true
  vars:
    release_stream: daily
    series:
      - precise
      - trusty
  tasks:
    - name: Update and upgrade
      apt: upgrade=full update_cache=true cache_valid_time=3600

    - name: Configure instance packages
      apt: pkg={{ item }} state=present
      with_items:
        - git
        - python-yaml
        - lxc
        - python-virtualenv
        - cloud-image-utils
        - btrfs-tools
        - juju
        - squid-deb-proxy

    - name: Setup storage volume
      filesystem: fstype=btrfs dev=/dev/xvdc

    - name: Storage fstab entry
      mount: name=/var/lib/lxc src=/dev/xvdc fstype=btrfs opts="discard,relatime,compress=lzo"  state=mounted

    # Juju auto initializes its keys on any command
    - name: Juju init keys
      sudo: false
      action: shell juju version

    - name: Querying system containers
      action: shell lxc-ls
      register: lxc_list

    - name: Create series template containers
      action: command lxc-create -B btrfs -t ubuntu-cloud -n {{ item }}-template -- -r {{ item }} -s {{ release_stream }} -S /home/ubuntu/.juju/ssh/juju_id_rsa.pub
      when: "'{{ item }}' not in '''{{ lxc_list.stdout }}'''"
      with_items: series

    - name: Start template series containers
      action: command lxc-start -d -n {{ item }}-template
      with_items: series

    - name: Initialize template series containers (1/3)
      action: command lxc-attach -n {{ item }}-template -- apt-get install -y git cpu-checker bridge-utils
      with_items: series

    - name: Initialize template series containers (2/3)
      action: command lxc-attach -n {{ item }}-template -- rm -Rf /var/lib/cloud/
      with_items: series

    - name: Initialize template series containers (3/3)
      action: command lxc-attach -n {{ item }}-template -- mkdir -p /var/lib/cloud/seed/nocloud-net
      with_items: series

    - name: Stop template containers
      action: command lxc-stop -d -n {{ item }}-template
      with_items: series

    - name: Stop template containers
      action: command lxc-stop -d -n {{ item }}-template
      with_items: series

    - name: Install jlxc tools
      action: git repo=https://github.com/kapilt/juju-lxc.git dest=/home/ubuntu/jlxc
